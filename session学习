session学习
session网络应用中成为“会话”，翻译成中文为：时域
session——指一个终端用户与操作系统进行通信的时间间隔，指从注册进入系统到注销退出系统之间所经历的时间。
具体到web中的session指的是用户在浏览网站时，从进入网站到关闭这个网站所经过的这段时间，也就是用户浏览这个网站所花费的时间。
session概念
	1，客户端
	2，特定的服务器
	3，不中断的操作时间
session工作原理
	1，当一个session第一次被启用时，一个唯一的标志被 存储 于本地的cookie中。
	2，首先使用session_start()函数，PHP从session仓库中加载已经存储的session变量。
	3，当执行PHP脚本时，通过使用session_register()函数注册session变量
	4，当PHP脚本执行结束后，未被销毁的session变量会被自动保存在本地一定路径下的session库中，这个路径可以
	通过php.ini文件中的session.save_path指定，下次浏览网页时可以加载使用。

node在线学习
http://www.nodebeginner.org/index-zh-cn.html

一个完整的基于Node.js的web应用
用例
我们来把目标设定得简单点，不过也要够实际才行：

用户可以通过浏览器使用我们的应用。
当用户请求http://domain/start时，可以看到一个欢迎页面，页面上有一个文件上传的表单。
用户可以选择一个图片并提交表单，随后文件将被上传到http://domain/upload，该页面完成上传后会把图片显示在页面上。

应用不同模块分析

我们来分解一下这个应用，为了实现上文的用例，我们需要实现哪些部分呢？

我们需要提供Web页面，因此需要一个HTTP服务器
对于不同的请求，根据请求的URL，我们的服务器需要给予不同的响应，因此我们需要一个路由，用于把请求对应到请求处理程序（request handler）
当请求被服务器接收并通过路由传递之后，需要可以对其进行处理，因此我们需要最终的请求处理程序
路由还应该能处理POST数据，并且把数据封装成更友好的格式传递给请求处理入程序，因此需要请求数据处理功能
我们不仅仅要处理URL对应的请求，还要把内容显示出来，这意味着我们需要一些视图逻辑供请求处理程序使用，以便将内容发送给用户的浏览器
最后，用户需要上传图片，所以我们需要上传处理功能来处理这方面的细节

使用Node.js时，我们不仅仅在实现一个应用，同时还实现了整个HTTP服务器。事实上，我们的Web应用以及对应的Web服务器基本上是一样的。

https://nodejsmodules.org/

ajax=异步javascript和XML
通过与后台服务器进行少量的数据交换，ajax可以使网页实现异步更新。意味着可以在不加载网页的情况下，对网页的局部进行更新
案例：新浪。google地图等

XMLHttpRequest 对象
所有现代浏览器均支持 XMLHttpRequest 对象（IE5 和 IE6 使用 ActiveXObject）。
XMLHttpRequest 用于在后台与服务器交换数据。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。

html5
http://blog.jobbole.com/78346/#q5

chrome
http://blog.jobbole.com/78291/
